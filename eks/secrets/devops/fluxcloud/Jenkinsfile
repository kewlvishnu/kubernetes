node('linux-k8s') {
  stage('Clean workspace before build') {
    deleteDir()
  }

  stage('Code checkout') {
    checkout scm
  }

  dir('preprod/secrets/devops/fluxcloud') {
    stage('Apply secrets'){
      withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'JENKINS_VAULT_READ',
                        usernameVariable: 'JENKINS_VAULT_READ', passwordVariable: 'TOKEN']]) {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: "kubernetes-pp", secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
          
          // Get backend.tf so we can pull the kubeconfig out of terraform output
          withCredentials([usernamePassword(credentialsId: 'Jenkins-Monotype-Github', passwordVariable: 'GITHUB_TOKEN', usernameVariable: 'GITHUB_USER')]) {
            sh "#!/bin/bash \n curl --no-sessionid --user ${GITHUB_USER}:${GITHUB_TOKEN} 'https://raw.githubusercontent.com/Monotype/devops-general/develop/projects/eks/terraform/preprod/backend.tf' > backend.tf"
          }
          sh """
            terraform init
            terraform output kubeconfig > kubeconfig
          """

          sh """
            export VAULT_ADDR=http://internal-vault.monotype.com:8200
            export VAULT_TOKEN=${TOKEN}
            vault read -field=ansible_key secret/kubernetes-flux/ansible-vault > vault-password

            export KUBECONFIG=./kubeconfig
            ansible-playbook site.yml --vault-password-file=vault-password
          """
          sh "rm ./kubeconfig"
        }
      }
    }
  }
}
