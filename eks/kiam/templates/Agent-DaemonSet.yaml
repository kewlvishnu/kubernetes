apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "kiam.fullname" . }}-agent
  labels:
    app: {{ include "kiam.name" . }}
    chart: {{ include "kiam.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: agent
spec:
  selector:
    matchLabels:
        app: {{ include "kiam.name" . }}
        release: {{ .Release.Name }}
        component: agent
  template:
    metadata:
      annotations:
{{ toYaml .Values.agent.podAnnotations | indent 8 }}
      labels:
        app: {{ include "kiam.name" . }}
        release: {{ .Release.Name }}
        component: agent
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      volumes:
        - name: ssl-certs
          hostPath:
            path: {{ .Values.sslCertsVolume }}
        - name: tls
          secret:
            secretName: {{ .Values.agent.tlsSecretName }}
        - name: xtables
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
      containers:
        - name: "{{ .Chart.Name }}-agent"
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /kiam
            - agent
          args:
            {{- if .Values.agent.args.host.iptables }}
            - --iptables
            {{- end }}
            - --host-interface={{ .Values.agent.args.host.interface }}
            {{- if .Values.agent.args.log.jsonOutput }}
            - --json-log
            {{- end }}
            - --level={{ .Values.agent.args.log.level }}
            - --port={{ .Values.agent.args.host.port }}
            - --cert=/etc/kiam/tls/{{ .Values.agent.tlsCertNames.cert }}
            - --key=/etc/kiam/tls/{{ .Values.agent.tlsCertNames.key }}
            - --ca=/etc/kiam/tls/{{ .Values.agent.tlsCertNames.ca }}
            - --server-address={{ template "kiam.fullname" . }}-server:{{ .Values.server.service.port }}
            {{- if .Values.agent.args.prometheus.scrape }}
            - --prometheus-listen-addr=0.0.0.0:{{ .Values.agent.args.prometheus.port }}
            - --prometheus-sync-interval={{ .Values.agent.args.prometheus.syncInterval }}
            {{- end }}
            - --gateway-timeout-creation={{ .Values.agent.args.gatewayTimeoutCreation }}
          {{- range $key, $value := .Values.agent.args.extraArgs }}
            {{- if $value }}
            - --{{ $key }}={{ $value }}
            {{- else }}
            - --{{ $key }}
            {{- end }}
          {{- end }}
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- if .Values.agent.extraEnv }}
          {{- range $name, $value := .Values.agent.extraEnv }}
            - name: {{ $name }}
              value: {{ quote $value }}
          {{- end }}
        {{- end }}
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: ssl-certs
            - mountPath: /etc/kiam/tls
              name: tls
            - mountPath: /var/run/xtables.lock
              name: xtables
          livenessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.agent.args.host.port }}
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
{{ toYaml .Values.agent.resources | indent 12 }}
      nodeSelector:
{{ toYaml .Values.agent.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.agent.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.agent.tolerations | indent 8 }}
  updateStrategy:
    type: {{ .Values.agent.updateStrategy }}
